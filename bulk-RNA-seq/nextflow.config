params {
  samplesheet   = "data/samplesheet.csv"
  star_index    = "ref/star_index"
  genome_fasta  = "ref/genome.fa"
  gtf           = "ref/genes.gtf"
  outdir        = "results"
  strandedness  = 0        // 0: unstranded, 1: stranded, 2: reverse
  threads       = 8
}

// Put work on POSIX FS
workDir = "${System.getenv('HOME')}/nf_work"

process {
  cpus = params.threads
  memory = '16 GB'
  errorStrategy = 'terminate'
  stageInMode = 'copy'        // safe everywhere
  withName: STAR_ALIGN { memory = '20 GB' }
  withName:STAR_INDEX   { memory = '8 GB'  }
  withName: STAR_ALIGN { conda = 'bioconda::star=2.7.*' }
  withName:STAR_INDEX   { conda = 'bioconda::star=2.7.*' }
  withName: FEATURECOUNTS { conda = 'bioconda::subread=2.*' }
  withName: EDGER { conda = "$projectDir/envs/edger.yml" }
}

conda {
  enabled  = true
  cacheDir = "${System.getenv('HOME')}/.nextflow_conda"
  useMamba = false              // or install mamba
}


profiles {
  conda {
    conda.enabled = true
  }
  docker {
    docker.enabled = true
  }
}

conda {
  enabled   = true
  cacheDir  = "${System.getenv('HOME')}/.nextflow_conda"
  useMamba  = false   // optional but much faster; requires micromamba/mamba
}

process.conda = """
  channels:
    - conda-forge
    - bioconda
    - defaults
  dependencies:
    - star=2.7.*
    - subread=2.*
    - r-base=4.3.*
    - bioconductor-edger
    - bioconductor-limma
    - r-optparse
    - r-ggplot2
"""

process {
  beforeScript = 'echo ">>> Starting process: $process.name"'
  afterScript  = 'echo ">>> Finished process: $process.name"'
}

process {
  stageInMode = 'copy'   // copy inputs into work dir instead of symlink
  // stageOutMode = 'copy'   // optional; publishDir already uses copy
}
